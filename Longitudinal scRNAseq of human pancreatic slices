library(SeuratData)
library(SeuratObject)
library(Seurat)
BMP1st2.data <-Read10X(data.dir = "C:/Users/mad1188/Box/Sequencing Data/cellranger_count/ST2-BMP-7/filtered_feature_bc_matrix")
BMP2st2.data <-Read10X(data.dir = "C:/Users/mad1188/Box/Sequencing Data/cellranger_count/ST-2-BMP-7/filtered_feature_bc_matrix")
BMP3st2.data <-Read10X(data.dir = "C:/Users/mad1188/Box/Sequencing Data/cellranger_count/ST--2-bmp-7/filtered_feature_bc_matrix")


BMP1st2 <- CreateSeuratObject(counts = BMP1st2.data,
                              project = "BMP1st2"
)
BMP2st2 <- CreateSeuratObject(counts = BMP2st2.data,
                              project = "BMP2st2"
)
BMP3st2 <- CreateSeuratObject(counts = BMP3st2.data,
                              project = "BMP3st2"
)

head(x = colnames(x = BMP1st2))
BMP1st2 <- RenameCells(object = BMP1st2, add.cell.id = "BMP1st2")
head(x = colnames(x = BMP1st2))
head(x = colnames(x = BMP2st2))
BMP2st2 <- RenameCells(object = BMP2st2, add.cell.id = "BMP2st2")
head(x = colnames(x = BMP2st2))
head(x = colnames(x = BMP3st2))
BMP3st2 <- RenameCells(object = BMP3st2, add.cell.id = "BMP3st2")
head(x = colnames(x = BMP3st2))





BMP1st2[["percent.mt"]] <- PercentageFeatureSet(object = BMP1st2, pattern = "^MT-")
BMP2st2[["percent.mt"]] <- PercentageFeatureSet(object = BMP2st2, pattern = "^MT-")
BMP3st2[["percent.mt"]] <- PercentageFeatureSet(object = BMP3st2, pattern = "^MT-")
p1 <- VlnPlot(object = BMP1st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
p2 <- VlnPlot(object = BMP2st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
p3 <- VlnPlot(object = BMP3st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
CombinePlots(plots = list(p1, p2, p3), ncol =1)
p4 <- FeatureScatter(object = BMP1st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p5 <- FeatureScatter(object = BMP1st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
p6 <- FeatureScatter(object = BMP2st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p7 <- FeatureScatter(object = BMP2st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
p8 <- FeatureScatter(object = BMP3st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p9 <- FeatureScatter(object = BMP3st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
CombinePlots(plots = list(p4, p5, p6, p7, p8, p9), ncol =2)
BMP1st2 <- subset(x = BMP1st2, subset = nFeature_RNA > 200 & nFeature_RNA < 8000 & percent.mt < 20)
BMP2st2 <- subset(x = BMP2st2, subset = nFeature_RNA > 200 & nFeature_RNA < 8000 & percent.mt < 20)
BMP3st2 <- subset(x = BMP3st2, subset = nFeature_RNA > 200 & nFeature_RNA < 8000 & percent.mt < 20)
p10 <- VlnPlot(object = BMP1st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
p11 <- VlnPlot(object = BMP2st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
p12 <- VlnPlot(object = BMP3st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
CombinePlots(plots = list(p10, p11, p12), ncol =1)
p13 <- FeatureScatter(object = BMP1st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p14 <- FeatureScatter(object = BMP1st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
p15 <- FeatureScatter(object = BMP2st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p16 <- FeatureScatter(object = BMP2st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
p17 <- FeatureScatter(object = BMP3st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p18 <- FeatureScatter(object = BMP3st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
CombinePlots(plots = list(p13, p14, p15, p16, p17, p18), ncol =2)

ctrl1st2.data <-Read10X(data.dir = "C:/Users/mad1188/Box/Sequencing Data/cellranger_count/ST2-CTRL/filtered_feature_bc_matrix")
ctrl1st2 <- CreateSeuratObject(counts = ctrl1st2.data,
                               project = "ctrl1st2"
)
ctrl2st2.data <-Read10X(data.dir = "C:/Users/mad1188/Box/Sequencing Data/cellranger_count/ST-2-CTRL-1/filtered_feature_bc_matrix")
ctrl2st2 <- CreateSeuratObject(counts = ctrl2st2.data,
                               project = "ctrl2st2")

ctrl3st2.data <-Read10X(data.dir = "C:/Users/mad1188/Box/Sequencing Data/cellranger_count/ST-2-CTRL-2/filtered_feature_bc_matrix")
ctrl3st2 <- CreateSeuratObject(counts = ctrl3st2.data,
                               project = "ctrl3st2"
)
head(x = colnames(x = ctrl1st2))
ctrl1st2 <- RenameCells(object = ctrl1st2, add.cell.id = "ctrl1st2")
head(x = colnames(x = ctrl1st2))
head(x = colnames(x = ctrl2st2))
ctrl2st2 <- RenameCells(object = ctrl2st2, add.cell.id = "ctrl2st2")
head(x = colnames(x = ctrl2st2))
head(x = colnames(x = ctrl3st2))
ctrl3st2 <- RenameCells(object = ctrl3st2, add.cell.id = "ctrl3st2")
head(x = colnames(x = ctrl3st2))
ctrl1st2[["percent.mt"]] <- PercentageFeatureSet(object = ctrl1st2, pattern = "^MT-")
ctrl2st2[["percent.mt"]] <- PercentageFeatureSet(object = ctrl2st2, pattern = "^MT-")
ctrl3st2[["percent.mt"]] <- PercentageFeatureSet(object = ctrl3st2, pattern = "^MT-")
p101 <- VlnPlot(object = ctrl1st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
p201 <- VlnPlot(object = ctrl2st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
p301 <- VlnPlot(object = ctrl3st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
CombinePlots(plots = list(p101, p201, p301), ncol =1)
p401 <- FeatureScatter(object = ctrl1st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p501 <- FeatureScatter(object = ctrl1st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
p601 <- FeatureScatter(object = ctrl2st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p701 <- FeatureScatter(object = ctrl2st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
p801 <- FeatureScatter(object = ctrl3st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p901 <- FeatureScatter(object = ctrl3st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
CombinePlots(plots = list(p401, p501, p601, p701, p801, p901), ncol =2)
ctrl1st2 <- subset(x =  ctrl1st2, subset = nFeature_RNA > 200 & nFeature_RNA < 8000 & percent.mt < 20)
ctrl2st2 <- subset(x = ctrl2st2, subset = nFeature_RNA > 200 & nFeature_RNA < 8000 & percent.mt < 20)
ctrl3st2 <- subset(x = ctrl3st2, subset = nFeature_RNA > 200 & nFeature_RNA < 8000 & percent.mt < 20)
p1001 <- VlnPlot(object = ctrl1st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
p1101 <- VlnPlot(object = ctrl2st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
p1201 <- VlnPlot(object = ctrl3st2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
CombinePlots(plots = list(p1001, p1101, p1201), ncol =1)
p1301 <- FeatureScatter(object = ctrl1st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p1401 <- FeatureScatter(object = ctrl1st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
p1501 <- FeatureScatter(object = ctrl2st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p1601 <- FeatureScatter(object = ctrl2st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
p1701 <- FeatureScatter(object = ctrl3st2, feature1 = "nCount_RNA", feature2 = "percent.mt")
p1801 <- FeatureScatter(object = ctrl3st2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
CombinePlots(plots = list(p1301, p1401, p1501, p1601, p1701, p1801), ncol =2)


DiabetesST2<- c(ctrl1st2, ctrl2st2, ctrl3st2,BMP1st2,BMP2st2,BMP3st2)

DiabetesST2.list <- lapply(X = DiabetesST2, FUN = function(x) {
  x <- NormalizeData(x)
  x <- FindVariableFeatures(x, selection.method = "vst", nfeatures = 3000)
})
features <- SelectIntegrationFeatures(object.list = DiabetesST2.list)
DiabetesST2.list <- lapply(X = DiabetesST2.list, FUN = function(x) {
  x <- ScaleData(x, features = features, verbose = FALSE)
  x <- RunPCA(x, features = features, verbose = FALSE)
})
DiabetesST2.anchors <- FindIntegrationAnchors(object.list = DiabetesST2.list, anchor.features = features, reduction = "rpca")
DiabetesST2.combined <- IntegrateData(anchorset = DiabetesST2.anchors)
DefaultAssay(DiabetesST2.combined) <- "integrated"
DiabetesST2.combined <- ScaleData(DiabetesST2.combined, verbose = FALSE)
DiabetesST2.combined <- RunPCA(DiabetesST2.combined, npcs = 30, verbose = FALSE)
DiabetesST2.combined <- RunUMAP(DiabetesST2.combined, reduction = "pca", dims = 1:30)
DiabetesST2.combined <- FindNeighbors(DiabetesST2.combined, reduction = "pca", dims = 1:30)
DiabetesST2.combined <- FindClusters(DiabetesST2.combined, resolution = 0.4)

p3 <- DimPlot(DiabetesST2.combined, reduction = "umap", raster = FALSE)
p4 <- DimPlot(DiabetesST2.combined, reduction = "umap", label = TRUE,raster = FALSE,
              repel = TRUE)
p3 + p4


DefaultAssay(object = DiabetesST2.combined)
DefaultAssay(object = DiabetesST2.combined) <- "integrated"
DiabetesST2.combined <- RunPCA(object = DiabetesST2.combined, features = VariableFeatures(object = DiabetesST2.combined))
print(x = DiabetesST2.combined[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(object = DiabetesST2.combined, dims = 1:2, reduction = "pca")
DimPlot(object = DiabetesST2.combined, reduction = "pca")
DimHeatmap(object = DiabetesST2.combined, dims = 1, cells = 500, balanced = TRUE)
DimHeatmap(object = DiabetesST2.combined, dims = 1:15, cells = 500, balanced = TRUE)
ElbowPlot(object = DiabetesST2.combined)
DiabetesST2.combined <- FindNeighbors(object = DiabetesST2.combined, dims = 1:20)
DiabetesST2.combined <- FindClusters(object = DiabetesST2.combined, resolution = 0)
DiabetesST2.combined <- FindClusters(object = DiabetesST2.combined, resolution = 0.1)
DiabetesST2.combined <- FindClusters(object = DiabetesST2.combined, resolution = 0.2)
DiabetesST2.combined <- FindClusters(object = DiabetesST2.combined, resolution = 0.3)
DiabetesST2.combined <- FindClusters(object = DiabetesST2.combined, resolution = 0.4)
DiabetesST2.combined <- FindClusters(object = DiabetesST2.combined, resolution = 0.5)
DiabetesST2.combined <- FindClusters(object = DiabetesST2.combined, resolution = 0.6)
clustree(DiabetesST2.combined, prefix = "integrated_snn_res.")
DiabetesST2.combined <- FindClusters(object = DiabetesST2.combined, resolution = 0.4)

table(DiabetesST2.combined$seurat_clusters)
table(Idents(DiabetesST2.combined), DiabetesST2.combined$orig.ident)
DiabetesST2.combined <- RunUMAP(DiabetesST2.combined, dims = 1:30)
p1010 <- DimPlot(object = DiabetesST2.combined, group.by = c("orig.ident", "integrated_snn_res.0.4"), combine = FALSE, pt.size = 1, raster = FALSE, label = TRUE)
p1010 <- lapply(X = p1010, FUN = function(x) x + theme(legend.position = "top") + guides(color = guide_legend(nrow = 3, byrow = TRUE, override.aes = list(size = 3))))
CombinePlots(p1010)
